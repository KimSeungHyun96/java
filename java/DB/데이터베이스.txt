데이터베이스 < (1팀, 2팀, 3팀, 4팀)

User : SYSTEM
pw : oracle
database : XE or KIM
Connect Using : XE

TNSNames Editor 접속
===========================================
복사 후 위에 붙여넣기 
===========================================
XE =
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = DESKTOP-FJ2D238)(PORT = 1521))
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = XE)
    )
  )
===========================================
학교 서버 들어가기
===========================================
KOPO =
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.110.112)(PORT = 1521))
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = orcl)
    )
  )
===========================================
내 서버 들어가기
============================================
KIM =
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.110.6)(PORT = 1521))
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME = XE)
    )
  )
===========================================
CREATE TABLE KOPO_PRODUCT_VOLUME
(   -- 컬럼명, 컬럼타입,
    REGIONID VARCHAR2(100), -- 지역정보
    PRODUCT VARCHAR2(100),  -- 상품정보
    YEARWEEK VARCHAR2(100), -- 연주차 정보
    QTY NUMBER              -- 판매량
)
실행 : ctrl + enter

EDIT KOPO_PRODUCT_VOLUME
Data Grid에서 추가가능 >표시 

WHERE 

;세미콜론 잘 사용안함 쿼리

-- 사용자 계정 생성 (system 계정이기때문에 계정을 생성)
CREATE USER haiteam
IDENTIFIED BY haiteam

-Session -> New connection -- id와 pw로 접속
id : haiteam
pw : haiteam
Database : XE
접속시 오류가 나옴 (ORA-01045: ~~) 
-> 권한을 줘야함
GRANT CONNECT, RESOURCE, DBA TO HAITEAM;
서버에 접속하기 위한 용량을 주게됨 (3가지 권한)

-- 테이블 전체목록 조회 (oracle에서만 작동)
SELECT * FROM TABS;

-- 내가 원하는 테이블 조회
SELECT * FROM DBA_USERS;

Read
Create
Delete
Update

ACCOUNT : 프로젝트 or 팀단위 계정 할당받을 때 사용
ex) 고객관리 cdm ~ ~ ~
계정별로 테이블 생성
DBA => selcet * from cdm.테이블명 
===========================================
CREATE TABLE KOPO_PRODUCT_VOLUME (
    REGIONID VARCHAR2(100), -- 지역정보
    PRODUCT VARCHAR2(100),  -- 상품정보
    YEARWEEK VARCHAR2(100), -- 연주차 정보
    QTY NUMBER              -- 판매량
);

ALTER TABLE KOPO_PRODUCT_VOLUME
RENAME COLUMN PRODUCT TO PRODUCTGROUP;

SELECT * FROM KOPO_PRODUCT_VOLUME
===========================================
ALTER TABLE > 테이블 변경
Database - import -table data
Gind is Read-only (목적테이블) 체크 - Show Data -Next
csv는 Text files(*.txt) 파일
All Files kopo_droduct_volume 열기
Delimiter 구분자임 comma 설정

문자 문자 문자 숫자로 되어있기 때문에 QTY - Volume(error)
Before Import -
Import Mode - one commit after all records 반영해야함
yes to all
Editor



=============================================
ex)
ip : 192.168.110.27
port :1521
database : XE
id : CHAI
pw : WEON
방화벽 - 접근제어 해야 접속가능
방화벽 해제 - 고급설정 - 인바운드 규칙 - 새 규칙 - port를 열어야 함
포트 1521
오라클포트 허용 - 오라클 1521
===============================================
HeidiSql 오픈소스 데이터베이스 (사용자 프로그램/Client 프로그램)
PostgreSQL 오픈소스 데이터베이스 시스템 (Server 프로그램)
??? : DB / ??? : 분석 / ??? : 웹 ~~
하나의 DB에 각자의 계정이 있음
접속하려면 방화벽 설정에서 특정 포트를 열어줘야함
===============================================
import pandas as pd
aa = pc.read_clipboard()
email = "seunghyun7272@gmail.com"
emailId = email.split("@")[0]
outValue = emailId
return outValue
================================
계정생성
KOPO4_seunghyun7272@gmail.com

CREATE USER haiteam
IDENTIFIED BY haiteam
GRANT CONNECT, RESOURCE, DBA TO HAITEAM;
===================================
정형데이터 / 비정형데이터 
정형데이터 : 지역번호 상품번호 주차정보 등
비정형데이터 : 비정형 데이터 비구조화 데이터, 비구조적 데이터는
 미리 정의된 데이터 모델이 없거나 미리 정의된 방식으로 정리되지
 않은 정보를 말한다.

RDB (Realational DataBase) 관계가 있음.
부서는 지역적으로만 관리 1. 지역 2. 상품 3. 행사 따로
=> 분석팀 : 지역, 상품, 주차, 물량, 생사번호
지역번호 (Key:기본키)
테이블에는 기본키가 존재함 완벽하게 확인할 수 있는 dataset

속성(Attribute) : 열 
튜플(Tuple) : 행
스키마(Schema) : 데이터베이스의 구조와 제약조건에 관해
전반적인 명세를 기술한 것
테이블명: 상품관리
(주차, 상품번호, 가격, 행사번호, AGE)/ 
사용자계정 - 테이블(스키마 정보) 인덱스, 뷰
모든 객체들을 스키마라고 함

Script (테이블 정보를 볼수 있음)

테이블 릴레이션
SELECT * FROM kopo_product_volume DRDER BY 주차 DESC

키(Key)
지역번호(key) 상품번호(key) 주차(key) 별로 데이터가 저장되었는지 확인 가능
키는 딱 1번만, NULL 값 허용 X, 

pk 중복시 기본키가 중복나서 에러 발생 
=============================================
CREATE TABLE KOPO_PRODUCT_VOLUME(
컬럼명1 타입(길이),
컬렴명2 타입(길이),
…
constraints [pk명] primary key (기본키1, 기본키2,…));
===============================================
constraints : 제약조건
pk명 -> pk_테이블명
==================================================
CREATE TABLE KOPO_PRODUCT_VOLUME_KSH (
CUSTOMER_ID VARCHAR2(100),
CUSTOMER_STATE VARCHAR2(100),
EMAIL_CNT NUMBER,
constraint pk_KOPO_PRODUCT_VOLUME_KSH primary key (CUSTOMER_ID)
)

SELECT * FROM KOPO_PRODUCT_VOLUME_KSH

INSERT INTO KOPO_PRODUCT_VOLUME_KSH VALUES('A011', '노원구', 5)
=================================================
외래키: 다른 릴레이션(테이블)의 기본키를 참조하는 속성
다른곳에서의 기본키를 가져옴
ex) 기본키 : 지역번호(key) 상품번호(key) 주차(key)
    외래키 : 행사번호(Key) +추가 (내가 가지고있지 않는 정보를 땡겨오는 것)
constraints [fk명] foreign key (컬럼명) references
--
CREATE TABLE KOPO_PRODUCT_VOLUME_KSH (
CUSTOMER_ID VARCHAR2(100),
CUSTOMER_STATE VARCHAR2(100),
EMAIL_CNT NUMBER,
constraint pk_KOPO_PRODUCT_VOLUME_KSH primary key (CUSTOMER_ID)
)

SELECT * FROM KOPO_PRODUCT_VOLUME_KSH

-- 테이블 삭제
DROP TABLE KOPO_PRODUCT_VOLUME_KSH

-- 테이블 생성
-- 자식테이블
CREATE TABLE KOPO_PRODUCT_VOLUME_KSH2 (
REGIONID VARCHAR2(100),
PRODUCTID VARCHAR2(100),
YEARWEEK VARCHAR2(100),
QTY NUMBER,
EVENTCODE VARCHAR2(100),
constraints pk_KOPO_PRODUCT_VOLUME_KSH2 primary key (REGIONID, PRODUCTID, YEARWEEK)
constraints fk_KOPO_PRODUCT_VOLUME_KSH2 foreign key (EVENTCODE) reference EVENT_MGMT(EVENT_ID)
)
-- 외래키는 null이어도 됨
INSERT INTO KOPO_PRODUCT_VOLUME_KSH2 VALUES('A01', 'ST001', '202001', 100, null);

-- 이벤트 관리 테이블 (pk: event_id)
-- 부모테이블
CREATE TABLE EVENT_MGMT (
EVENT_ID VARCHAR2(100),
EVENT_PERIODS VARCHAR2(100),
DISCOUNT_PERCENT NUMBER,
constraint pk_EVENT_MGMT primary key (EVENT_ID)
)

INSERT INTO EVENT_MGNT VALUES('EV0001', '202103, 0.5')

-- INSERT INTO KOPO_PRODUCT_VOLUME_KSH VALUES('A011', '노원구', 5);

----
1. 릴레이션(테이블)은 행과 열이 있는 데이터
2. 부모키 안에 자식키(안에 데이터를 지워야함)\\

ctrl + T : 테이블 연결정보
alter table [] add : 기본키 없는 상태에서 추가하기